{"version":3,"sources":["components/AddCategory.js","components/CardItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["useStyles","makeStyles","theme","margen","marginTop","root","background","light","inputClass","heigth","AddCategory","setCategories","useState","inputValue","setInputValue","classes","onSubmit","e","preventDefault","cat","FormControl","fullWidth","className","TextField","label","variant","value","onChange","target","flexGrow","media","height","minHeight","maxHeight","avatar","backgroundColor","red","CardItem","id","title","url","fecha","React","Card","CardHeader","Avatar","aria-label","src","subheader","CardMedia","image","CardActions","disableSpacing","IconButton","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","undefined","user","avatar_url","console","log","images","downsized_medium","import_datetime","textAlign","margin","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","Grid","item","xl","lg","xs","sm","Typography","component","CircularProgress","key","paper","padding","spacing","color","palette","text","secondary","GifExpertApp","categories","Container","maxWidth","container","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.226c5f52.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { FormControl, Typography,TextField } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { light } from \"@material-ui/core/styles/createPalette\";\n\nconst useStyles = makeStyles((theme) => ({\n  margen: {\n    marginTop: 15,\n  },\n  root: {\n    background: light,\n  },\n  inputClass: {\n    heigth: 40,\n  },\n}));\nexport const AddCategory = ({ setCategories }) => {\n  const [inputValue, setInputValue] = useState(\"\");\n  const classes = useStyles();\n  //console.log(categories);\n  const handleInputChangue = (e) => {\n    //console.log(e.target.value);\n    setInputValue(e.target.value);\n  };\n  const handdleAdd = () => {\n    setCategories((cat) => [inputValue]);\n    //console.log(categories);\n  };\n  const handdleSubmit = (e) => {\n    e.preventDefault();\n    setCategories((cat) => [inputValue]);\n  };\n\n  return (\n    <form onSubmit={handdleSubmit}>\n      <FormControl fullWidth className={classes.root}>\n        <TextField\n          className={classes.inputClass}\n          label=\"Buscar\"\n          variant=\"outlined\"\n          value={inputValue}\n          onChange={handleInputChangue}\n        />\n      </FormControl>\n    </form>\n  );\n};\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardActions from '@material-ui/core/CardActions';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\n\n\nimport \"./Cards.css\";\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n    marginTop: 15,\n  },\n  media: {\n    height: 450,\n    minHeight:350,\n    maxHeight:450,\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n});\n\nexport default function CardItem({id, title, url, avatar, fecha }) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n  return (\n    <div className={classes.root}>\n\n\n    <Card className={classes.root}>\n      <CardHeader\n        avatar={\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\n            R<img src={avatar}></img>\n          </Avatar>\n        }\n        title={title}\n        subheader={fecha}\n      />\n      <CardMedia\n        className={classes.media}\n        image={url}\n        title=\"Paella dish\"\n      />\n      <CardActions disableSpacing>\n        <IconButton aria-label=\"add to favorites\">\n          <FavoriteIcon />\n        </IconButton>\n      </CardActions>\n    </Card>\n\n\n      {/* <Card className={classes.root}>\n        <CardActionArea>\n          <CardMedia\n            key= {id}\n            className={classes.media}\n            image={url}\n            title=\"Contemplative Reptile\"\n          />\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              {title}\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n        </Card> */}\n    </div>\n  );\n}\n","export const getGifs = async (category) => {\n  //console.log(category);\n  //A8xMXqzieIHmtO3BjGLAtf1daSSDAv8K\n  //const url = `http://api.giphy.com/v1/gifs/search?api_key=biZpTaJhj5YsOHN7Arrs9Wz9GNWM959q&q=${encodeURI(\n    const url = `http://api.giphy.com/v1/gifs/search?api_key=A8xMXqzieIHmtO3BjGLAtf1daSSDAv8K&q=${encodeURI(  \n    category\n  )}&limit=12`;\n  const resp = await fetch(url);\n  const { data } = await resp.json();\n  const gifs = data.map((img) => {\n    let avatar = \"\";\n    if (img.user != undefined) {\n        if(img.user.avatar_url != undefined){\n            avatar = img.user.avatar_url;\n        }\n    }\n    console.log('Avatar',avatar);\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images.downsized_medium.url,\n      avatar: avatar,\n      fecha: img.import_datetime,\n    };\n  });\n  return gifs;\n};\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid, Typography, CircularProgress } from \"@material-ui/core\";\nimport CardItem from \"./CardItem\";\n//import { getGifs } from \"../helpers/getGifs\";\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n    minHeight: 450,\n  },\n  media: {\n    height: 180,\n  },\n  margen: {\n    marginTop: 25,\n    textAlign: \"center\",\n    margin: 'auto'\n  },\n});\n\nexport const GifGrid = ({ category }) => {\n  const classes = useStyles();\n  const { data, loading } = useFetchGifs(category);\n  //console.log(state);\n\n  return (\n    <>\n      <div className={classes.margen}>\n        <Grid item xl={4} lg={4} xs={12} sm={12} className={classes.margen}>\n          <Typography variant=\"h4\" component=\"h4\">\n            { loading && <CircularProgress />  }\n          </Typography>\n        </Grid>\n      </div>\n      {data.map((img) => {\n        return (\n          <>\n            <Grid item xl={4} lg={4} xs={12} sm={12} className={classes.margen}>\n              <CardItem key={img.id} {...img}></CardItem>\n            </Grid>\n          </>\n        );\n      })}\n    </>\n  );\n};\n","import { useState, useEffect } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n    const [state, setstate] = useState({\n        data:[],\n        loading: true\n    })\n\n    useEffect(() => {\n        //console.log('useEffect');\n        getGifs(category).then( (imgs) => setstate({\n            data: imgs,\n            loading: false\n        }));\n    }, [ category ]);\n\n    return state;\n}\n","import React, { useState } from \"react\";\nimport { Container, Typography, Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { AddCategory } from \"./components/AddCategory\";\nimport { GifGrid } from \"./components/GifGrid\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n  margen: {\n    marginTop: 15,\n  },\n}));\n\nexport const GifExpertApp = () => {\n  //const categories = ['One','Second','Tree'];\n  const [categories, setCategories] = useState([\"paw patrol\"]);\n  const classes = useStyles();\n  return (\n    <>\n      <Container maxWidth=\"lg\">\n        <Typography variant=\"h2\" component=\"h2\">\n          Gif-App\n        </Typography>\n        <hr />\n        <AddCategory setCategories={setCategories} />\n        <div className={classes.root}>\n          <Grid container spacing={4}>\n            {categories.map((category) => {\n              return <GifGrid key={category} category={category}></GifGrid>;\n            })}\n          </Grid>\n        </div>\n      </Container>\n    </>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}